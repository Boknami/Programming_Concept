프로그램 개발 -> 함수들을 호출한다
func() 이런식으로

동기식은 함수의 수행이 끝날 때까지(return) 기다린다.
값이 꼭 필요, 리턴 받은 값으로 다음 코드들을 진행해야할때

비동기식은 함수 호출 -> 그 다음으로 바로 진행.
함수호출하였지만 그거에 여부랑 상관없이 코드가 진행되도 되는 경우
그러나 그냥 막 진행하면 애가 끝났다고 알려줄라 카는 것도 어떻게 못하니까
콜백함수라는게 있다. 

콜백함수 => 비동기식에서 끝난 함수가 콜백함수로 간다. 코드에 끝에서 콜백함수 마무리


NodeJs 기본 함수 -> 비동기식
안드로이드 통신 -> 비동기식



--------------------------------------------------------

빨래 설거지 청소 

동기적 -> 빨래 - 설거지 - 청소 -> 일이 끝났다 선언
비동기 -> 빨래 업체 전화 -> 설거지 업체 전화 -> 청소 업체 전화 [3분 걸림] -> 전화 다시 받으면 된다
              뭐가 먼저 끝날지 알 수가 없다 -> 처리 순서가 중요하지 않은 경우~!!


--------------------------------------------------------
동기 -> 서버에서 요청을 보냈을 때 응답이 돌아와야 다음 동작을 수행할 수 있음.
	간단, 직관
	결과가 주어질 때까지 아무것도 못하고 대기

비동기 -> 요청을 보냈을 때 응답 상태와 상관없이 다음 동작을 수행할 수 있음
	A작업이 시작하면 동시에 B작업이 실행
	동기적 코드를 전부 실행하고 나서야 값을 반환
	복잡
	결과가 주어질 때까지 다른 작업을 할 수 있어서 효율이 좋다

콜백함수 -> 요청한 작업이 끝났음을 알리고, 작업의 결과물을 콜백함수를 통해 사용가능하게된다.

나중에 호출되는 함수
명시적으로 호출하는 함수X
단지 함수를 등록하기만 하고, 어떤 이벤트, 특정 시점에 도달 시 시스템에서 호출한다.

1. 다른 함수의 인자로써 이용되는 함수.

2. 어떤 이벤트에 의해 호출되어지는 함수
--------------------------------------------------------
정의 -> 함수 안에 파라미터로 들어가는 함수
용도 -> 순차적으로 코드를 실행하고 싶을 때

--------------------------------------------------------
동기 -> func() 기다렸다가 실행
비동기 -> func() 실행되는동안 다른 작업실행











